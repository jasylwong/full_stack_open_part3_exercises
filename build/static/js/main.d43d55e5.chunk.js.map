{"version":3,"sources":["components/Filter.js","components/Form.js","components/Persons.js","components/Notification.js","services/persons.js","App.js","index.js"],"names":["Filter","filter","handleFilter","value","onChange","Form","addPerson","newName","handleNameChange","newNumber","handleNumberChange","onSubmit","type","Persons","filteredPersons","deletePerson","persons","map","person","key","id","name","number","onClick","Notification","message","borderColor","className","baseUrl","axios","get","then","response","data","post","delete","updatedPerson","put","App","useState","setPersons","setNewName","setNewNumber","setFilter","confMessage","setConfirmMessage","errorMessage","setErrorMessage","useEffect","personService","resolve","people","event","target","preventDefault","newPerson","includes","findId","find","p","returnedPerson","catch","error","setTimeout","window","alert","concat","toLowerCase","confirm","console","log","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.d43d55e5.chunk.js","sourcesContent":["import React from 'react';\n\nconst Filter = ({filter, handleFilter}) => {\n  return (\n    <>\n      filter shown with <input value={filter} onChange={handleFilter}/>\n    </>\n  )\n}\n\nexport default Filter;\n","import React from 'react';\n\nconst Form = ({addPerson, newName, handleNameChange, newNumber, handleNumberChange}) => {\n  return (\n    <>\n      <form onSubmit={addPerson}>\n        <div>\n          name: <input value={newName} onChange={handleNameChange}/>\n        </div>\n        <div>\n          number: <input value={newNumber} onChange={handleNumberChange}/>\n        </div>\n        <div>\n          <button type='submit'>add</button>\n        </div>\n      </form>\n    </>\n  )\n}\n\nexport default Form;","import React from 'react';\n\nconst Persons = ({filteredPersons, persons, deletePerson }) => {\n  return (\n    <>\n      {filteredPersons.map(person => \n        <div key={person.id} >\n          {person.name} {person.number} <button onClick={() => deletePerson(person)}>delete</button>\n        </div>\n      )}\n    </>\n  )\n}\n\nexport default Persons;","import React from 'react';\n\nconst Notification = ({ message, borderColor }) => {\n  if (message === null) {\n    return null\n  }\n\n  return (\n    <div className={borderColor} >\n      {message}\n    </div>\n  )\n}\n\nexport default Notification;\n","import axios from 'axios';\nconst baseUrl = \"/api/persons\";\n\nconst getAll = () => {\n  return axios.get(baseUrl).then(response => response.data)\n}\n\nconst create = (person) => {\n  return axios.post(baseUrl, person).then(response => response.data)\n}\n\nconst remove = (id) => {\n  return axios.delete(`${baseUrl}/${id}`)\n}\n\nconst update = (id, updatedPerson) => {\n  const request = axios.put(`${baseUrl}${id}`, updatedPerson)\n  return request.then(response => response.data)\n}\n\nexport default { getAll, create, remove, update }","import React, { useState, useEffect } from 'react';\nimport Filter from './components/Filter';\nimport Form from './components/Form';\nimport Persons from './components/Persons';\nimport Notification from './components/Notification';\nimport personService from './services/persons'\n\nconst App = () => {\n  const [persons, setPersons] = useState([])\n  const [newName, setNewName] = useState('')\n  const [newNumber, setNewNumber] = useState('')\n  const [filter, setFilter] = useState('')\n  const [confMessage, setConfirmMessage] = useState(null)\n  const [errorMessage, setErrorMessage] = useState(null)\n\n  useEffect(() => {\n    personService.getAll().then(resolve => {\n      setPersons(resolve)\n    })\n  }, [])\n\n  const addPerson = (event) => {\n    event.preventDefault()\n    const newPerson = { name: newName, number: newNumber}\n    \n    if (persons.map(person => person.name).includes(newName)) {\n      const findId = persons.find(p => p.name === newName).id\n      personService.update(findId, newPerson)\n        .then(returnedPerson => {\n          setPersons(persons.map(p => (p.id !== findId ? p : returnedPerson)))\n        })\n        .catch(error => {\n          setErrorMessage(`${newName} has already been removed from server` )\n          setTimeout(() => {setErrorMessage(null)}, 3000)\n          setPersons(persons.filter(p => p.id !== findId))\n        })\n    } else if (persons.map(person => person.number).includes(newNumber)) {\n      window.alert(`The number '${newNumber}' is already used by someone else`)\n    } else {\n      personService.create(newPerson).then(returnedPerson => {\n        setPersons(persons.concat(returnedPerson))\n        setConfirmMessage(`${newName} added`)\n        setTimeout(() => {setConfirmMessage(null)}, 3000)\n      })\n    }\n    setNewName('')\n    setNewNumber('')\n  }\n\n  const handleNameChange = (event) => {\n    setNewName(event.target.value)\n  }\n\n  const handleNumberChange = (event) => {\n    setNewNumber(event.target.value)\n  }\n\n  const handleFilter = (event) => {\n    setFilter(event.target.value)\n  }\n\n  const filteredPersons = (people) => { \n    return ( filter === ''\n      ? people\n      : people.filter(person => person.name.toLowerCase().includes(filter.toLowerCase()))\n    )\n  }\n\n  const deletePerson = (person) => {\n    if (window.confirm(`Delete ${person.name}?`)) {\n      personService.remove(person.id).then(\n        setPersons(\n          persons.filter(p => (p.id !== person.id ? person : null))\n        )\n      )\n      .catch(error => {\n        console.log('error!')\n        window.alert(`${person.name} already deleted`)\n      })\n    }\n  }\n\n  return (\n    <div>\n      <h2>Phonebook</h2>\n      <Notification message={confMessage} borderColor='confirmation' />\n      <Notification message={errorMessage} borderColor='error' />\n      <Filter filter={filter} handleFilter={handleFilter}/>\n      <h2>Add a new</h2>\n      <Form addPerson={addPerson}\n        newName={newName}\n        handleNameChange={handleNameChange}\n        newNumber={newNumber}\n        handleNumberChange={handleNumberChange}\n      />\n      <h2>Numbers</h2>\n      <Persons \n        filteredPersons={filteredPersons(persons)} \n        persons={persons} \n        deletePerson={deletePerson}\n      />\n    </div>\n  )\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport './index.css'\n\nReactDOM.render(\n    <App />,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}